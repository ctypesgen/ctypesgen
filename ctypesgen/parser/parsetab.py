
# new_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFnonassocELSEADD_ASSIGN AND AND_ASSIGN AND_OP AUTO BREAK CASE CHAR CHARACTER_CONSTANT COLON COMMA CONDOP CONST CONTINUE DEC_OP DEFAULT DIVIDE DIV_ASSIGN DO DOUBLE ELLIPSIS ELSE ENUM EQUALS EQ_OP EXTERN FLOAT FOR F_CONST_1 F_CONST_2 F_CONST_3 F_CONST_4 F_CONST_5 F_CONST_6 GE_OP GOTO GT IDENTIFIER IF INC_OP INT I_CONST_BIN I_CONST_DEC I_CONST_HEX I_CONST_OCT LBRACE LBRACKET LEFT_ASSIGN LEFT_OP LE_OP LNOT LONG LPAREN LT MINUS MOD MOD_ASSIGN MUL_ASSIGN NE_OP NOT OR OR_ASSIGN OR_OP PERIOD PLUS PP_DEFINE PP_DEFINE_MACRO_NAME PP_DEFINE_NAME PP_END_DEFINE PP_IDENTIFIER_PASTE PP_MACRO_PARAM PP_STRINGIFY PP_UNDEFINE PRAGMA PRAGMA_END PRAGMA_PACK PTR_OP RBRACE RBRACKET REGISTER RESTRICT RETURN RIGHT_ASSIGN RIGHT_OP RPAREN SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TIMES TYPEDEF TYPE_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR XOR_ASSIGN _BOOL _NORETURN __ASM__ __ATTRIBUTE__ translation_unit :\n                         | translation_unit external_declaration\n                         | translation_unit directive\n     identifier : IDENTIFIER\n                   | IDENTIFIER PP_IDENTIFIER_PASTE identifier\n                   | PP_MACRO_PARAM PP_IDENTIFIER_PASTE identifier\n                   | IDENTIFIER PP_IDENTIFIER_PASTE PP_MACRO_PARAM\n                   | PP_MACRO_PARAM PP_IDENTIFIER_PASTE PP_MACRO_PARAM\n     constant : I_CONST_HEX\n                 | I_CONST_DEC\n                 | I_CONST_OCT\n                 | I_CONST_BIN\n     constant : F_CONST_1\n                 | F_CONST_2\n                 | F_CONST_3\n                 | F_CONST_4\n                 | F_CONST_5\n                 | F_CONST_6\n     constant : CHARACTER_CONSTANT\n     string_literal : STRING_LITERAL\n     multi_string_literal : string_literal\n                             | macro_param\n                             | multi_string_literal string_literal\n                             | multi_string_literal macro_param\n     macro_param : PP_MACRO_PARAM\n                    | PP_STRINGIFY PP_MACRO_PARAM\n     primary_expression : identifier\n                           | constant\n                           | multi_string_literal\n                           | LPAREN expression RPAREN\n     postfix_expression : primary_expression\n                           | postfix_expression LBRACKET expression RBRACKET\n                           | postfix_expression LPAREN RPAREN\n                           | postfix_expression LPAREN argument_expression_list RPAREN\n                           | postfix_expression PERIOD IDENTIFIER\n                           | postfix_expression PTR_OP IDENTIFIER\n                           | postfix_expression INC_OP\n                           | postfix_expression DEC_OP\n     argument_expression_list : assignment_expression\n                                 | argument_expression_list COMMA assignment_expression\n                                 | type_name\n                                 | argument_expression_list COMMA type_name\n     asm_expression : __ASM__ volatile_opt LPAREN string_literal RPAREN\n                       | __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list RPAREN\n                       | __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list RPAREN\n                       | __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list RPAREN\n     str_opt_expr_pair_list :\n                               | str_opt_expr_pair\n                               | str_opt_expr_pair_list COMMA str_opt_expr_pair\n     str_opt_expr_pair : string_literal\n                          | string_literal LPAREN expression RPAREN\n     volatile_opt :\n                     | VOLATILE\n     unary_expression : postfix_expression\n                         | INC_OP unary_expression\n                         | DEC_OP unary_expression\n                         | unary_operator cast_expression\n                         | SIZEOF unary_expression\n                         | SIZEOF LPAREN type_name RPAREN\n                         | asm_expression\n     unary_operator : AND\n                       | TIMES\n                       | PLUS\n                       | MINUS\n                       | NOT\n                       | LNOT\n     cast_expression : unary_expression\n                        | LPAREN type_name RPAREN cast_expression\n     multiplicative_expression : cast_expression\n                                  | multiplicative_expression TIMES cast_expression\n                                  | multiplicative_expression DIVIDE cast_expression\n                                  | multiplicative_expression MOD cast_expression\n     additive_expression : multiplicative_expression\n                            | additive_expression PLUS multiplicative_expression\n                            | additive_expression MINUS multiplicative_expression\n     shift_expression : additive_expression\n                         | shift_expression LEFT_OP additive_expression\n                         | shift_expression RIGHT_OP additive_expression\n     relational_expression : shift_expression\n                              | relational_expression LT shift_expression\n                              | relational_expression GT shift_expression\n                              | relational_expression LE_OP shift_expression\n                              | relational_expression GE_OP shift_expression\n     equality_expression : relational_expression\n                            | equality_expression EQ_OP relational_expression\n                            | equality_expression NE_OP relational_expression\n     and_expression : equality_expression\n                       | and_expression AND equality_expression\n     exclusive_or_expression : and_expression\n                                | exclusive_or_expression XOR and_expression\n     inclusive_or_expression : exclusive_or_expression\n                                | inclusive_or_expression OR exclusive_or_expression\n     logical_and_expression : inclusive_or_expression\n                               | logical_and_expression AND_OP inclusive_or_expression\n     logical_or_expression : logical_and_expression\n                              | logical_or_expression OR_OP logical_and_expression\n     conditional_expression : logical_or_expression\n                               | logical_or_expression CONDOP expression COLON conditional_expression\n     assignment_expression : conditional_expression\n                              | unary_expression assignment_operator assignment_expression\n     assignment_operator : EQUALS\n                            | MUL_ASSIGN\n                            | DIV_ASSIGN\n                            | MOD_ASSIGN\n                            | ADD_ASSIGN\n                            | SUB_ASSIGN\n                            | LEFT_ASSIGN\n                            | RIGHT_ASSIGN\n                            | AND_ASSIGN\n                            | XOR_ASSIGN\n                            | OR_ASSIGN\n     expression : assignment_expression\n                   | expression COMMA assignment_expression\n     constant_expression : conditional_expression\n     declaration : declaration_impl SEMI\n     declaration_impl : declaration_specifier_list\n                         | declaration_specifier_list init_declarator_list\n     declaration_specifier_list : gcc_attributes declaration_specifier gcc_attributes\n                                   | declaration_specifier_list declaration_specifier gcc_attributes\n     declaration_specifier : storage_class_specifier\n                              | type_specifier\n                              | type_qualifier\n     init_declarator_list : init_declarator\n                             | init_declarator_list COMMA init_declarator\n     init_declarator : declarator gcc_attributes\n                        | declarator gcc_attributes EQUALS initializer\n     storage_class_specifier : TYPEDEF\n                                | EXTERN\n                                | STATIC\n                                | AUTO\n                                | REGISTER\n     type_specifier : VOID\n                       | _BOOL\n                       | CHAR\n                       | SHORT\n                       | INT\n                       | LONG\n                       | FLOAT\n                       | DOUBLE\n                       | SIGNED\n                       | UNSIGNED\n                       | struct_or_union_specifier\n                       | enum_specifier\n                       | TYPE_NAME\n                       | _NORETURN\n     struct_or_union_specifier : struct_or_union gcc_attributes IDENTIFIER LBRACE member_declaration_list RBRACE\n                                  | struct_or_union gcc_attributes TYPE_NAME LBRACE member_declaration_list RBRACE\n                                  | struct_or_union gcc_attributes LBRACE member_declaration_list RBRACE\n                                  | struct_or_union gcc_attributes IDENTIFIER\n                                  | struct_or_union gcc_attributes TYPE_NAME\n     struct_or_union : STRUCT\n                        | UNION\n     gcc_attributes :\n                       | gcc_attributes gcc_attribute\n     gcc_attribute : __ATTRIBUTE__ LPAREN LPAREN gcc_attrib_list RPAREN RPAREN\n     gcc_attrib_list : gcc_attrib\n                        | gcc_attrib_list COMMA gcc_attrib\n     gcc_attrib :\n                   | IDENTIFIER\n                   | IDENTIFIER LPAREN argument_expression_list RPAREN\n     member_declaration_list : member_declaration\n                                | member_declaration_list member_declaration\n     member_declaration : specifier_qualifier_list member_declarator_list SEMI\n                           | specifier_qualifier_list SEMI\n     specifier_qualifier_list : gcc_attributes specifier_qualifier gcc_attributes\n                                 | specifier_qualifier_list specifier_qualifier gcc_attributes\n     specifier_qualifier : type_specifier\n                            | type_qualifier\n     member_declarator_list : member_declarator\n                               | member_declarator_list COMMA member_declarator\n     member_declarator : declarator gcc_attributes\n                          | COLON constant_expression gcc_attributes\n                          | declarator COLON constant_expression gcc_attributes\n     enum_specifier : ENUM LBRACE enumerator_list RBRACE\n                       | ENUM IDENTIFIER LBRACE enumerator_list RBRACE\n                       | ENUM IDENTIFIER\n     enumerator_list : enumerator_list_iso\n                        | enumerator_list_iso COMMA\n     enumerator_list_iso : enumerator\n                            | enumerator_list_iso COMMA enumerator\n     enumerator : IDENTIFIER\n                   | IDENTIFIER EQUALS constant_expression\n     type_qualifier : CONST\n                       | VOLATILE\n                       | RESTRICT\n     declarator : pointer direct_declarator\n                   | direct_declarator\n     direct_declarator : IDENTIFIER\n                          | LPAREN gcc_attributes declarator RPAREN\n                          | direct_declarator LBRACKET constant_expression RBRACKET\n                          | direct_declarator LBRACKET RBRACKET\n                          | direct_declarator LPAREN parameter_type_list RPAREN\n                          | direct_declarator LPAREN identifier_list RPAREN\n                          | direct_declarator LPAREN RPAREN\n     pointer : TIMES\n                | TIMES type_qualifier_list\n                | TIMES pointer\n                | TIMES type_qualifier_list pointer\n     type_qualifier_list : type_qualifier\n                            | gcc_attribute\n                            | type_qualifier_list type_qualifier\n                            | type_qualifier_list gcc_attribute\n     parameter_type_list : parameter_list\n                            | parameter_list COMMA ELLIPSIS\n     parameter_list : parameter_declaration\n                       | parameter_list COMMA parameter_declaration\n     parameter_declaration : declaration_specifier_list declarator gcc_attributes\n                              | declaration_specifier_list abstract_declarator\n                              | declaration_specifier_list\n     identifier_list : IDENTIFIER\n                        | identifier_list COMMA IDENTIFIER\n     type_name : specifier_qualifier_list\n                  | specifier_qualifier_list abstract_declarator\n     abstract_declarator : pointer\n                            | direct_abstract_declarator         gcc_attributes\n                            | pointer direct_abstract_declarator gcc_attributes\n     direct_abstract_declarator : LPAREN gcc_attributes abstract_declarator RPAREN\n                                   | LBRACKET RBRACKET\n                                   | LBRACKET constant_expression RBRACKET\n                                   | direct_abstract_declarator LBRACKET RBRACKET\n                                   | direct_abstract_declarator LBRACKET constant_expression RBRACKET\n                                   | LPAREN RPAREN\n                                   | LPAREN parameter_type_list RPAREN\n                                   | direct_abstract_declarator LPAREN RPAREN\n                                   | direct_abstract_declarator LPAREN parameter_type_list RPAREN\n     initializer : assignment_expression\n                    | LBRACE initializer_list RBRACE\n                    | LBRACE initializer_list COMMA RBRACE\n     initializer_list : initializer\n                         | initializer_list COMMA initializer\n     statement : labeled_statement\n                  | compound_statement\n                  | expression_statement\n                  | selection_statement\n                  | iteration_statement\n                  | jump_statement\n     labeled_statement : IDENTIFIER COLON statement\n                          | CASE constant_expression COLON statement\n                          | DEFAULT COLON statement\n     compound_statement : LBRACE RBRACE\n                           | LBRACE statement_list RBRACE\n                           | LBRACE declaration_list RBRACE\n                           | LBRACE declaration_list statement_list RBRACE\n     compound_statement : LBRACE error RBRACE\n     declaration_list : declaration\n                         | declaration_list declaration\n     statement_list : statement\n                       | statement_list statement\n     expression_statement : SEMI\n                             | expression SEMI\n     expression_statement : error SEMI\n     selection_statement : IF LPAREN expression RPAREN statement %prec IF\n                            | IF LPAREN expression RPAREN statement ELSE statement\n                            | SWITCH LPAREN expression RPAREN statement\n     iteration_statement : WHILE LPAREN expression RPAREN statement\n                            | DO statement WHILE LPAREN expression RPAREN SEMI\n                            | FOR LPAREN expression_statement expression_statement RPAREN statement\n                            | FOR LPAREN expression_statement expression_statement expression RPAREN statement\n     jump_statement : GOTO IDENTIFIER SEMI\n                       | CONTINUE SEMI\n                       | BREAK SEMI\n                       | RETURN SEMI\n                       | RETURN expression SEMI\n     external_declaration : declaration\n                             | function_definition\n     function_definition : declaration_specifier_list declarator declaration_list compound_statement\n                            | declaration_specifier_list declarator compound_statement\n                            | declarator declaration_list compound_statement\n                            | declarator compound_statement\n     directive : define\n                  | undefine\n                  | pragma\n     define : PP_DEFINE PP_DEFINE_NAME PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_NAME type_name PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_NAME constant_expression PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN RPAREN PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN RPAREN constant_expression PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN macro_parameter_list RPAREN PP_END_DEFINE\n               | PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN macro_parameter_list RPAREN constant_expression PP_END_DEFINE\n     define : PP_DEFINE error PP_END_DEFINE\n     undefine : PP_UNDEFINE PP_DEFINE_NAME PP_END_DEFINE\n     macro_parameter_list : PP_MACRO_PARAM\n                             | macro_parameter_list COMMA PP_MACRO_PARAM\n     pragma : pragma_pack\n     pragma_pack : PRAGMA PRAGMA_PACK LPAREN RPAREN PRAGMA_END\n                    | PRAGMA PRAGMA_PACK LPAREN constant RPAREN PRAGMA_END\n                    | PRAGMA PRAGMA_PACK LPAREN pragma_pack_stack_args RPAREN PRAGMA_END\n     pragma_pack_stack_args : IDENTIFIER\n                               | IDENTIFIER COMMA IDENTIFIER\n                               | IDENTIFIER COMMA IDENTIFIER COMMA constant\n                               | IDENTIFIER COMMA constant COMMA IDENTIFIER\n                               | IDENTIFIER COMMA constant\n    '
    
_lr_action_items = {'PP_DEFINE':([0,1,2,3,4,5,6,7,8,15,22,57,78,85,87,161,171,173,189,200,203,205,276,277,317,375,387,426,427,433,434,460,],[-1,12,-2,-3,-264,-265,-270,-271,-272,-284,-115,-269,-267,-268,-240,-273,-280,-281,-266,-241,-242,-244,-274,-275,-243,-276,-285,-277,-278,-286,-287,-279,]),'PP_UNDEFINE':([0,1,2,3,4,5,6,7,8,15,22,57,78,85,87,161,171,173,189,200,203,205,276,277,317,375,387,426,427,433,434,460,],[-1,14,-2,-3,-264,-265,-270,-271,-272,-284,-115,-269,-267,-268,-240,-273,-280,-281,-266,-241,-242,-244,-274,-275,-243,-276,-285,-277,-278,-286,-287,-279,]),'PRAGMA':([0,1,2,3,4,5,6,7,8,15,22,57,78,85,87,161,171,173,189,200,203,205,276,277,317,375,387,426,427,433,434,460,],[-1,19,-2,-3,-264,-265,-270,-271,-272,-284,-115,-269,-267,-268,-240,-273,-280,-281,-266,-241,-242,-244,-274,-275,-243,-276,-285,-277,-278,-286,-287,-279,]),'TIMES':([0,1,2,3,4,5,6,7,8,10,13,15,20,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,64,66,67,70,73,75,76,78,80,81,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,104,107,112,115,117,118,119,120,121,122,123,125,126,127,128,129,130,131,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,159,161,164,167,168,169,171,173,174,184,187,188,189,190,192,194,200,201,203,204,205,206,207,210,211,212,213,216,217,219,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,243,244,245,246,247,248,249,250,251,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,282,283,284,285,286,287,300,307,311,313,315,317,318,319,320,321,322,325,326,330,331,332,337,341,342,348,349,359,360,361,362,363,364,367,369,374,375,377,386,387,394,400,404,405,406,407,408,409,410,411,412,413,414,415,416,426,427,432,433,434,438,439,441,443,445,446,447,448,450,455,460,461,471,473,474,482,483,484,485,487,494,496,],[-1,20,-2,-3,-264,-265,-270,-271,-272,20,-153,-284,20,-115,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-269,-245,127,20,127,20,-153,-154,127,20,-199,-200,-267,20,-119,-176,-268,-246,-240,127,127,-247,-231,-232,-233,-234,-235,-236,-249,-4,127,127,127,127,-67,-54,127,127,127,-69,127,-60,-31,-61,-62,-63,-64,-65,-66,-21,-27,-28,-29,-25,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-22,-20,272,-273,20,-67,127,-4,-280,-281,-118,20,-201,-202,-266,127,-149,-150,-241,-248,-242,127,-244,-251,127,127,-250,127,127,127,127,127,-260,-261,-262,127,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,127,127,127,127,-37,-38,-55,127,-56,-57,-58,127,127,127,-23,-24,-25,127,127,-26,127,127,127,127,127,127,127,127,127,127,127,127,127,-274,-275,-153,-167,-168,-153,127,-153,127,-153,127,20,-174,127,-243,-237,-5,-7,127,-239,-30,127,127,-259,-263,-33,-35,-36,-8,-6,272,272,-70,-71,-72,-166,127,20,-165,-276,127,20,-285,-148,127,-175,-238,127,-68,127,127,127,127,127,-32,-34,127,-59,-277,-278,127,-286,-287,127,-146,20,127,-147,-252,-254,-255,127,-43,-279,-155,127,-257,127,-253,-256,-258,127,-44,-45,-46,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,10,13,15,17,20,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,64,66,67,70,71,73,74,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,100,104,107,109,112,118,119,120,122,126,127,128,129,130,131,161,168,171,173,174,184,185,186,187,188,189,190,192,194,199,200,201,203,204,205,206,207,208,210,211,212,213,216,217,219,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,246,250,251,254,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,282,283,285,286,287,291,295,299,300,307,311,313,314,315,317,318,321,322,326,330,331,332,364,367,374,375,377,386,387,390,394,400,404,405,406,408,409,410,411,412,415,426,427,431,432,433,434,438,439,441,443,445,446,447,448,450,460,461,465,471,473,474,482,483,484,485,],[-1,21,-2,-3,-264,-265,-270,-271,-272,21,-153,-284,21,-195,-115,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,84,-151,-152,-269,-245,99,21,169,21,-153,-154,169,182,-196,-197,-199,-200,-267,21,-119,192,198,-176,-268,-246,-240,99,99,-247,-231,-232,-233,-234,-235,-236,-249,169,169,99,220,169,169,169,169,169,-61,-62,-63,-64,-65,-66,-273,169,-280,-281,-118,21,304,-198,-201,-202,-266,169,-149,-150,198,-241,-248,-242,99,-244,-251,99,169,99,-250,169,169,169,169,169,-260,-261,-262,169,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,169,169,169,169,341,342,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-274,-275,-153,-167,-168,169,-153,169,381,382,21,-153,169,21,-174,198,169,-243,-237,99,-239,169,169,-259,-263,-166,169,-165,-276,169,21,-285,435,-148,169,-175,-238,99,99,99,169,169,169,169,-277,-278,381,169,-286,-287,169,-146,21,169,-147,-252,-254,-255,99,-279,-155,480,99,-257,99,-253,-256,-258,169,]),'LPAREN':([0,1,2,3,4,5,6,7,8,10,13,15,17,18,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,64,66,67,68,69,70,72,73,74,75,76,78,80,81,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,112,117,118,119,120,122,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,161,164,168,169,171,173,174,175,177,179,184,186,187,188,189,190,192,194,200,201,203,204,205,206,207,210,211,212,213,216,217,219,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,243,244,246,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,280,281,282,283,284,285,286,287,290,292,293,294,299,300,307,311,313,315,317,318,319,320,321,322,325,326,329,330,331,332,337,341,342,348,349,364,365,367,369,370,372,374,375,377,381,386,387,394,400,404,405,406,408,409,410,411,412,413,414,415,419,421,424,425,426,427,432,433,434,438,439,441,443,445,446,447,448,450,457,458,459,460,461,471,473,474,475,482,483,484,485,],[-1,13,-2,-3,-264,-265,-270,-271,-272,13,-153,-284,13,71,-195,-188,-115,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-269,-245,104,13,168,170,13,-153,-154,175,71,168,185,-196,-197,-199,-200,-267,13,-119,-176,-268,-246,-240,104,104,-247,-231,-232,-233,-234,-235,-236,-249,-4,168,213,104,216,217,104,219,104,240,246,246,168,250,-31,-61,-62,-63,-64,-65,-66,-52,-21,-27,-28,-29,-25,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-22,-20,-273,284,104,-4,-280,-281,-118,291,-191,-194,300,-198,-201,-202,-266,104,-149,-150,-241,-248,-242,104,-244,-251,104,104,-250,104,104,104,104,104,-260,-261,-262,104,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,104,168,104,104,-37,-38,104,104,168,345,-53,168,-23,-24,-25,168,168,-26,168,168,168,168,168,168,168,168,168,168,168,168,168,-274,-275,-153,284,368,-167,-168,-153,168,-153,168,-189,-190,-192,-193,300,-153,104,13,-174,168,-243,-237,-5,-7,104,-239,-30,168,410,104,-259,-263,-33,-35,-36,-8,-6,-166,368,168,284,-222,-218,-165,-276,168,432,300,-285,-148,168,-175,-238,104,104,104,104,104,168,-32,-34,104,-220,-224,-223,-219,-277,-278,104,-286,-287,104,-146,13,168,-147,-252,-254,-255,104,-221,-225,-217,-279,-155,104,-257,104,485,-253,-256,-258,104,]),'$end':([0,1,2,3,4,5,6,7,8,15,22,57,78,85,87,161,171,173,189,200,203,205,276,277,317,375,387,426,427,433,434,460,],[-1,0,-2,-3,-264,-265,-270,-271,-272,-284,-115,-269,-267,-268,-240,-273,-280,-281,-266,-241,-242,-244,-274,-275,-243,-276,-285,-277,-278,-286,-287,-279,]),'__ATTRIBUTE__':([0,1,2,3,4,5,6,7,8,11,13,15,16,18,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,61,64,66,67,69,71,73,75,76,77,78,79,81,82,84,85,86,87,89,104,116,117,121,123,124,125,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,165,166,167,168,169,171,173,174,177,179,187,188,189,192,193,194,200,203,205,240,243,244,245,247,248,249,250,255,256,257,261,275,276,277,279,281,282,283,284,286,290,292,293,294,296,297,300,308,309,310,312,313,317,319,320,325,335,337,341,342,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,372,374,375,385,386,387,393,394,395,397,399,401,404,407,413,414,415,416,418,419,421,424,425,426,427,432,433,434,439,440,442,444,445,452,455,457,458,459,460,461,469,470,481,487,494,496,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,-153,-153,-284,68,-187,68,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-151,-152,-153,-269,-245,-153,-153,68,-153,-154,-186,-153,68,-199,-200,-153,-267,68,68,68,-176,-268,-246,-240,-153,-153,-97,-54,-69,-60,-95,-31,-21,-93,-27,-28,-29,-91,-25,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-22,-89,-20,-87,-84,-79,-76,-73,-153,-273,-114,68,-67,-153,-4,-280,-281,68,-191,-194,-201,-202,-266,-149,-153,-150,-241,-242,-244,-153,-37,-38,-55,-56,-57,-58,-153,-23,-24,-25,-26,68,-274,-275,-153,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-153,-161,-153,-174,-243,-5,-7,-30,-96,-33,-35,-36,-94,-92,-90,-8,-6,-88,-85,-86,-80,-81,-82,-83,-77,-78,-74,-75,-70,-71,-72,68,-153,68,-153,68,-222,-218,68,-276,68,68,-285,-153,-148,-162,-164,-153,-153,-175,-68,-32,-34,-153,-59,68,-220,-224,-223,-219,-277,-278,-153,-286,-287,-146,-163,68,-153,-147,-98,-43,-221,-225,-217,-279,-155,-153,68,68,-44,-45,-46,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,66,67,69,71,77,78,79,81,84,85,86,87,89,161,171,173,174,177,179,184,189,192,194,200,203,205,276,277,284,290,292,293,294,296,300,313,317,368,369,375,386,387,394,404,426,427,433,434,439,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,30,-153,-284,30,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,30,-153,-154,-186,-153,-153,-267,30,-119,-176,-268,-246,-240,-153,-273,-280,-281,-118,-191,-194,30,-266,-149,-150,-241,-242,-244,-274,-275,-153,-189,-190,-192,-193,-153,-153,-174,-243,-153,30,-276,30,-285,-148,-175,-277,-278,-286,-287,-146,-147,-279,-155,]),'EXTERN':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,66,67,69,71,77,78,79,81,84,85,86,87,89,161,171,173,174,177,179,184,189,192,194,200,203,205,276,277,284,290,292,293,294,296,300,313,317,368,369,375,386,387,394,404,426,427,433,434,439,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,31,-153,-284,31,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,31,-153,-154,-186,-153,-153,-267,31,-119,-176,-268,-246,-240,-153,-273,-280,-281,-118,-191,-194,31,-266,-149,-150,-241,-242,-244,-274,-275,-153,-189,-190,-192,-193,-153,-153,-174,-243,-153,31,-276,31,-285,-148,-175,-277,-278,-286,-287,-146,-147,-279,-155,]),'STATIC':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,66,67,69,71,77,78,79,81,84,85,86,87,89,161,171,173,174,177,179,184,189,192,194,200,203,205,276,277,284,290,292,293,294,296,300,313,317,368,369,375,386,387,394,404,426,427,433,434,439,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,32,-153,-284,32,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,32,-153,-154,-186,-153,-153,-267,32,-119,-176,-268,-246,-240,-153,-273,-280,-281,-118,-191,-194,32,-266,-149,-150,-241,-242,-244,-274,-275,-153,-189,-190,-192,-193,-153,-153,-174,-243,-153,32,-276,32,-285,-148,-175,-277,-278,-286,-287,-146,-147,-279,-155,]),'AUTO':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,66,67,69,71,77,78,79,81,84,85,86,87,89,161,171,173,174,177,179,184,189,192,194,200,203,205,276,277,284,290,292,293,294,296,300,313,317,368,369,375,386,387,394,404,426,427,433,434,439,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,33,-153,-284,33,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,33,-153,-154,-186,-153,-153,-267,33,-119,-176,-268,-246,-240,-153,-273,-280,-281,-118,-191,-194,33,-266,-149,-150,-241,-242,-244,-274,-275,-153,-189,-190,-192,-193,-153,-153,-174,-243,-153,33,-276,33,-285,-148,-175,-277,-278,-286,-287,-146,-147,-279,-155,]),'REGISTER':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,66,67,69,71,77,78,79,81,84,85,86,87,89,161,171,173,174,177,179,184,189,192,194,200,203,205,276,277,284,290,292,293,294,296,300,313,317,368,369,375,386,387,394,404,426,427,433,434,439,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,34,-153,-284,34,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,34,-153,-154,-186,-153,-153,-267,34,-119,-176,-268,-246,-240,-153,-273,-280,-281,-118,-191,-194,34,-266,-149,-150,-241,-242,-244,-274,-275,-153,-189,-190,-192,-193,-153,-153,-174,-243,-153,34,-276,34,-285,-148,-175,-277,-278,-286,-287,-146,-147,-279,-155,]),'VOID':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,35,-153,-284,35,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,35,-153,-153,-154,-186,-153,-153,-267,35,-119,-176,-268,-246,-240,-153,-153,-273,35,35,-153,-280,-281,-118,-191,-194,35,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,35,-153,-174,-243,-166,-153,35,-165,-276,35,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'_BOOL':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,36,-153,-284,36,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,36,-153,-153,-154,-186,-153,-153,-267,36,-119,-176,-268,-246,-240,-153,-153,-273,36,36,-153,-280,-281,-118,-191,-194,36,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,36,-153,-174,-243,-166,-153,36,-165,-276,36,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'CHAR':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,37,-153,-284,37,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,37,-153,-153,-154,-186,-153,-153,-267,37,-119,-176,-268,-246,-240,-153,-153,-273,37,37,-153,-280,-281,-118,-191,-194,37,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,37,-153,-174,-243,-166,-153,37,-165,-276,37,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'SHORT':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,38,-153,-284,38,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,38,-153,-153,-154,-186,-153,-153,-267,38,-119,-176,-268,-246,-240,-153,-153,-273,38,38,-153,-280,-281,-118,-191,-194,38,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,38,-153,-174,-243,-166,-153,38,-165,-276,38,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'INT':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,39,-153,-284,39,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,39,-153,-153,-154,-186,-153,-153,-267,39,-119,-176,-268,-246,-240,-153,-153,-273,39,39,-153,-280,-281,-118,-191,-194,39,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,39,-153,-174,-243,-166,-153,39,-165,-276,39,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'LONG':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,40,-153,-284,40,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,40,-153,-153,-154,-186,-153,-153,-267,40,-119,-176,-268,-246,-240,-153,-153,-273,40,40,-153,-280,-281,-118,-191,-194,40,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,40,-153,-174,-243,-166,-153,40,-165,-276,40,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,41,-153,-284,41,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,41,-153,-153,-154,-186,-153,-153,-267,41,-119,-176,-268,-246,-240,-153,-153,-273,41,41,-153,-280,-281,-118,-191,-194,41,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,41,-153,-174,-243,-166,-153,41,-165,-276,41,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,42,-153,-284,42,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,42,-153,-153,-154,-186,-153,-153,-267,42,-119,-176,-268,-246,-240,-153,-153,-273,42,42,-153,-280,-281,-118,-191,-194,42,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,42,-153,-174,-243,-166,-153,42,-165,-276,42,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'SIGNED':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,43,-153,-284,43,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,43,-153,-153,-154,-186,-153,-153,-267,43,-119,-176,-268,-246,-240,-153,-153,-273,43,43,-153,-280,-281,-118,-191,-194,43,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,43,-153,-174,-243,-166,-153,43,-165,-276,43,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,44,-153,-284,44,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,44,-153,-153,-154,-186,-153,-153,-267,44,-119,-176,-268,-246,-240,-153,-153,-273,44,44,-153,-280,-281,-118,-191,-194,44,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,44,-153,-174,-243,-166,-153,44,-165,-276,44,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'TYPE_NAME':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,66,67,69,71,77,78,79,81,82,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,47,-153,-284,47,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-151,-152,-153,-269,-245,-153,47,-153,-153,-154,-186,-153,-153,-267,47,-119,194,-176,-268,-246,-240,-153,-153,-273,47,47,-153,-280,-281,-118,-191,-194,47,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,47,-153,-174,-243,-166,-153,47,-165,-276,47,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'_NORETURN':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,48,-153,-284,48,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,48,-153,-153,-154,-186,-153,-153,-267,48,-119,-176,-268,-246,-240,-153,-153,-273,48,48,-153,-280,-281,-118,-191,-194,48,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,48,-153,-174,-243,-166,-153,48,-165,-276,48,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'CONST':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,73,75,76,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,187,188,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,49,-153,-284,49,-187,49,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,49,-153,-153,-154,-186,-153,49,-199,-200,-153,-267,49,-119,-176,-268,-246,-240,-153,-153,-273,49,49,-153,-280,-281,-118,-191,-194,49,-201,-202,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,49,-153,-174,-243,-166,-153,49,-165,-276,49,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,73,75,76,77,78,79,81,84,85,86,87,89,104,132,161,164,166,168,171,173,174,177,179,184,187,188,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,50,-153,-284,50,-187,50,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,50,-153,-153,-154,-186,-153,50,-199,-200,-153,-267,50,-119,-176,-268,-246,-240,-153,-153,253,-273,50,50,-153,-280,-281,-118,-191,-194,50,-201,-202,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,50,-153,-174,-243,-166,-153,50,-165,-276,50,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'RESTRICT':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,73,75,76,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,187,188,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,51,-153,-284,51,-187,51,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,51,-153,-153,-154,-186,-153,51,-199,-200,-153,-267,51,-119,-176,-268,-246,-240,-153,-153,-273,51,51,-153,-280,-281,-118,-191,-194,51,-201,-202,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,51,-153,-174,-243,-166,-153,51,-165,-276,51,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'ENUM':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,53,-153,-284,53,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,53,-153,-153,-154,-186,-153,-153,-267,53,-119,-176,-268,-246,-240,-153,-153,-273,53,53,-153,-280,-281,-118,-191,-194,53,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,53,-153,-174,-243,-166,-153,53,-165,-276,53,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'STRUCT':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,54,-153,-284,54,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,54,-153,-153,-154,-186,-153,-153,-267,54,-119,-176,-268,-246,-240,-153,-153,-273,54,54,-153,-280,-281,-118,-191,-194,54,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,54,-153,-174,-243,-166,-153,54,-165,-276,54,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'UNION':([0,1,2,3,4,5,6,7,8,10,11,15,16,18,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,66,67,69,71,77,78,79,81,84,85,86,87,89,104,161,164,166,168,171,173,174,177,179,184,189,192,193,194,200,203,205,240,250,276,277,279,282,283,284,286,290,292,293,294,296,300,308,309,310,311,312,313,317,364,368,369,374,375,386,387,393,394,395,397,401,404,415,426,427,432,433,434,439,440,445,460,461,],[-1,-153,-2,-3,-264,-265,-270,-271,-272,55,-153,-284,55,-187,-188,-115,-153,-153,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-153,-269,-245,-153,55,-153,-153,-154,-186,-153,-153,-267,55,-119,-176,-268,-246,-240,-153,-153,-273,55,55,-153,-280,-281,-118,-191,-194,55,-266,-149,-153,-150,-241,-242,-244,-153,-153,-274,-275,-153,-167,-168,-153,-153,-189,-190,-192,-193,-153,-153,-153,-153,-161,55,-153,-174,-243,-166,-153,55,-165,-276,55,-285,-153,-148,-162,-164,-153,-175,-153,-277,-278,-153,-286,-287,-146,-163,-147,-279,-155,]),'SEMI':([9,10,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,59,60,66,67,69,79,81,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,107,110,111,112,113,114,115,116,117,121,123,124,125,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,165,167,169,174,177,179,191,192,194,200,201,202,203,204,205,206,207,210,211,219,220,221,222,223,224,243,244,245,247,248,249,255,256,257,261,275,279,282,283,286,290,292,293,294,305,306,311,313,317,318,319,320,321,322,323,325,330,331,332,333,335,337,341,342,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,374,394,396,398,399,404,405,406,407,408,409,413,414,416,437,439,442,444,445,446,447,448,450,452,455,461,466,468,469,470,471,472,473,474,481,482,483,484,487,494,496,],[22,-116,-187,-188,-115,-153,-117,-153,-123,-120,-121,-122,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-183,-184,-185,-245,98,-116,-153,-154,-186,-125,-119,-176,-246,-240,98,98,206,-247,-231,-232,-233,-234,-235,-236,-249,-4,211,98,221,222,223,-112,-99,-67,-97,-54,-69,-60,-95,-31,-21,-93,-27,-28,-29,-91,-25,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-22,-89,-20,-87,-84,-79,-76,-73,-153,-114,-67,-4,-118,-191,-194,-124,-149,-150,-241,-248,206,-242,98,-244,-251,98,98,-250,98,331,-260,-261,-262,332,-37,-38,-55,-56,-57,-58,-23,-24,-25,-26,-125,-153,-167,-168,-153,-189,-190,-192,-193,-126,-226,397,-174,-243,-237,-5,-7,98,-239,-113,-30,98,-259,-263,-100,-96,-33,-35,-36,-94,-92,-90,-8,-6,-88,-85,-86,-80,-81,-82,-83,-77,-78,-74,-75,-70,-71,-72,-166,-165,-148,440,-169,-153,-175,-238,98,-68,98,98,-32,-34,-59,-227,-146,-171,-153,-147,-252,-254,-255,98,-98,-43,-155,-228,-170,-153,-172,98,483,-257,98,-173,-253,-256,-258,-44,-45,-46,]),'LBRACE':([11,18,21,22,23,52,53,54,55,56,58,59,67,69,77,82,84,86,87,88,89,91,92,93,94,95,96,97,98,107,177,179,190,192,194,200,201,203,204,205,206,207,210,211,221,222,223,290,292,293,294,307,317,318,321,322,331,332,405,406,408,409,438,446,447,448,450,461,471,473,474,482,483,484,],[59,-187,-188,-115,59,-153,83,-151,-152,59,-245,59,-154,-186,59,193,199,-246,-240,59,59,-247,-231,-232,-233,-234,-235,-236,-249,59,-191,-194,307,308,312,-241,-248,-242,59,-244,-251,59,59,-250,-260,-261,-262,-189,-190,-192,-193,307,-243,-237,59,-239,-259,-263,-238,59,59,59,307,-252,-254,-255,59,-155,59,-257,59,-253,-256,-258,]),'PP_DEFINE_NAME':([12,14,],[61,65,]),'PP_DEFINE_MACRO_NAME':([12,],[62,]),'error}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([1,],[2,]),'directive':([1,],[3,]),'declaration':([1,11,23,56,59,77,89,],[4,58,58,86,58,86,86,]),'function_definition':([1,],[5,]),'define':([1,],[6,]),'undefine':([1,],[7,]),'pragma':([1,],[8,]),'declaration_impl':([1,11,23,56,59,77,89,],[9,9,9,9,9,9,9,]),'declaration_specifier_list':([1,11,23,56,59,71,77,89,284,296,300,368,],[10,60,60,60,60,184,60,60,184,184,184,184,]),'declarator':([1,10,60,64,80,184,311,386,441,],[11,23,160,172,160,297,399,172,399,]),'pragma_pack':([1,],[15,]),'gcc_attributes':([1,11,13,23,25,52,56,59,61,66,71,77,89,104,160,168,193,240,250,279,281,284,286,296,297,300,308,309,312,365,368,393,399,401,415,432,444,469,],[16,16,64,79,81,82,16,16,166,174,16,16,16,166,275,166,166,166,166,364,366,369,374,16,385,386,166,166,166,418,16,166,442,166,166,166,470,481,]),'pointer':([1,10,20,60,64,73,80,164,184,311,369,386,441,],[17,17,74,17,17,186,17,280,299,17,280,299,17,]),'direct_declarator':([1,10,17,60,64,80,184,299,311,386,441,],[18,18,69,18,18,18,18,69,18,18,18,]),'init_declarator_list':([10,60,],[24,24,]),'declaration_specifier':([10,16,60,79,184,369,386,],[25,66,25,66,25,66,66,]),'init_declarator':([10,60,80,],[26,26,191,]),'storage_class_specifier':([10,16,60,79,184,369,386,],[27,27,27,27,27,27,27,]),'type_specifier':([10,16,60,79,164,166,184,311,369,386,],[28,28,28,28,282,282,28,282,28,28,]),'type_qualifier':([10,16,20,60,73,79,164,166,184,311,369,386,],[29,29,75,29,187,29,283,283,29,283,29,29,]),'struct_or_union_specifier':([10,16,60,79,164,166,184,311,369,386,],[45,45,45,45,45,45,45,45,45,45,]),'enum_specifier':([10,16,60,79,164,166,184,311,369,386,],[46,46,46,46,46,46,46,46,46,46,]),'struct_or_union':([10,16,60,79,164,166,184,311,369,386,],[52,52,52,52,52,52,52,52,52,52,]),'declaration_list':([11,23,59,],[56,77,89,]),'compound_statement':([11,23,56,59,77,88,89,107,204,207,210,321,406,408,409,450,471,474,],[57,78,85,93,189,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'gcc_attribute':([16,20,64,73,79,81,82,166,174,275,364,366,369,374,385,386,418,442,470,481,],[67,76,67,188,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'type_qualifier_list':([20,],[73,]),'statement_list':([59,89,],[88,204,]),'statement':([59,88,89,107,204,207,210,321,406,408,409,450,471,474,],[91,201,91,218,201,318,322,405,446,447,448,473,482,484,]),'labeled_statement':([59,88,89,107,204,207,210,321,406,408,409,450,471,474,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'expression_statement':([59,88,89,107,204,207,210,219,321,330,406,408,409,450,471,474,],[94,94,94,94,94,94,94,330,94,411,94,94,94,94,94,94,]),'selection_statement':([59,88,89,107,204,207,210,321,406,408,409,450,471,474,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'iteration_statement':([59,88,89,107,204,207,210,321,406,408,409,450,471,474,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'jump_statement':([59,88,89,107,204,207,210,321,406,408,409,450,471,474,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'expression':([59,88,89,104,107,112,168,204,207,210,213,216,217,219,237,239,246,250,321,330,406,408,409,410,411,450,471,474,485,],[102,102,102,214,102,224,214,102,102,102,324,327,328,102,334,336,214,214,102,102,102,102,102,449,451,102,102,102,489,]),'assignment_expression':([59,88,89,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,239,240,246,250,307,321,330,406,408,409,410,411,415,432,438,450,471,474,485,],[113,113,113,113,113,113,113,306,113,113,113,323,113,113,113,113,333,113,113,339,113,113,306,113,113,113,113,113,113,113,453,339,306,113,113,113,113,]),'conditional_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,239,240,246,250,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[114,165,165,114,114,165,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,165,165,114,165,114,114,165,165,165,114,114,114,114,114,452,114,114,114,165,114,114,114,114,]),'unary_expression':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[115,167,167,115,115,167,115,115,115,245,247,167,249,115,115,115,115,115,115,115,115,115,115,115,115,167,115,115,115,115,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,115,167,115,167,115,167,167,167,115,115,115,115,115,167,115,115,115,167,115,115,115,115,]),'logical_or_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,239,240,246,250,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'postfix_expression':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'unary_operator':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'cast_expression':([59,61,70,88,89,100,104,107,112,120,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[121,121,121,121,121,121,121,121,121,248,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,361,362,363,121,121,121,121,121,407,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'asm_expression':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'logical_and_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,335,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'primary_expression':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'string_literal':([59,61,70,88,89,100,104,107,112,118,119,120,122,137,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,345,367,377,400,406,408,409,410,411,412,415,432,438,443,450,456,471,474,485,486,488,493,],[133,133,133,133,133,133,133,133,133,133,133,133,133,255,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,417,133,133,133,133,133,133,133,133,133,133,133,133,133,133,475,133,133,133,475,475,475,]),'inclusive_or_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,344,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'identifier':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,208,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,319,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,349,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'constant':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,185,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,390,400,406,408,409,410,411,412,415,432,438,443,450,464,471,474,485,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,302,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,436,136,136,136,136,136,136,136,136,136,136,136,136,479,136,136,136,]),'multi_string_literal':([59,61,70,88,89,100,104,107,112,118,119,120,122,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'exclusive_or_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,346,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'macro_param':([59,61,70,88,89,100,104,107,112,118,119,120,122,137,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,272,273,274,285,287,307,315,321,326,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[151,151,151,151,151,151,151,151,151,151,151,151,151,256,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'and_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,347,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'equality_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,350,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'relational_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,351,352,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'shift_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,353,354,355,356,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'additive_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,357,358,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'multiplicative_expression':([59,61,70,88,89,100,104,107,112,168,190,204,207,210,212,213,216,217,219,225,237,238,239,240,246,250,251,254,258,260,262,263,264,265,266,267,268,269,270,271,285,287,307,315,321,330,367,377,400,406,408,409,410,411,412,415,432,438,443,450,471,474,485,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,359,360,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'type_name':([61,104,168,240,250,415,432,],[162,215,215,340,343,454,340,]),'constant_expression':([61,70,100,285,287,315,367,377,400,443,],[163,176,209,373,376,403,420,428,444,469,]),'specifier_qualifier_list':([61,104,168,193,240,250,308,309,312,393,401,415,432,],[164,164,164,311,164,164,311,311,311,311,311,164,164,]),'parameter_type_list':([71,284,300,368,],[178,371,371,422,]),'identifier_list':([71,],[180,]),'parameter_list':([71,284,300,368,],[181,181,181,181,]),'parameter_declaration':([71,284,296,300,368,],[183,183,384,183,183,]),'enumerator_list':([83,199,],[195,316,]),'enumerator_list_iso':([83,199,],[196,196,]),'enumerator':([83,199,314,],[197,197,402,]),'assignment_operator':([115,],[225,]),'volatile_opt':([132,],[252,]),'abstract_declarator':([164,184,369,386,],[278,298,423,423,]),'specifier_qualifier':([164,166,311,],[279,286,279,]),'direct_abstract_declarator':([164,184,280,299,369,386,],[281,281,365,365,281,281,]),'macro_parameter_list':([170,],[288,]),'pragma_pack_stack_args':([185,],[303,]),'initializer':([190,307,438,],[305,392,467,]),'member_declaration_list':([193,308,312,],[309,393,401,]),'member_declaration':([193,308,309,312,393,401,],[310,310,395,310,395,395,]),'argument_expression_list':([240,432,],[338,463,]),'gcc_attrib_list':([291,],[379,]),'gcc_attrib':([291,431,],[380,462,]),'initializer_list':([307,],[391,]),'member_declarator_list':([311,],[396,]),'member_declarator':([311,441,],[398,468,]),'str_opt_expr_pair_list':([456,486,493,],[476,490,495,]),'str_opt_expr_pair':([456,486,488,493,],[477,477,491,477,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> <empty>','translation_unit',0,'p_translation_unit','cgrammar.py',122),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','cgrammar.py',123),
  ('translation_unit -> translation_unit directive','translation_unit',2,'p_translation_unit','cgrammar.py',124),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','cgrammar.py',133),
  ('identifier -> IDENTIFIER PP_IDENTIFIER_PASTE identifier','identifier',3,'p_identifier','cgrammar.py',134),
  ('identifier -> PP_MACRO_PARAM PP_IDENTIFIER_PASTE identifier','identifier',3,'p_identifier','cgrammar.py',135),
  ('identifier -> IDENTIFIER PP_IDENTIFIER_PASTE PP_MACRO_PARAM','identifier',3,'p_identifier','cgrammar.py',136),
  ('identifier -> PP_MACRO_PARAM PP_IDENTIFIER_PASTE PP_MACRO_PARAM','identifier',3,'p_identifier','cgrammar.py',137),
  ('constant -> I_CONST_HEX','constant',1,'p_constant_integer','cgrammar.py',155),
  ('constant -> I_CONST_DEC','constant',1,'p_constant_integer','cgrammar.py',156),
  ('constant -> I_CONST_OCT','constant',1,'p_constant_integer','cgrammar.py',157),
  ('constant -> I_CONST_BIN','constant',1,'p_constant_integer','cgrammar.py',158),
  ('constant -> F_CONST_1','constant',1,'p_constant_float','cgrammar.py',171),
  ('constant -> F_CONST_2','constant',1,'p_constant_float','cgrammar.py',172),
  ('constant -> F_CONST_3','constant',1,'p_constant_float','cgrammar.py',173),
  ('constant -> F_CONST_4','constant',1,'p_constant_float','cgrammar.py',174),
  ('constant -> F_CONST_5','constant',1,'p_constant_float','cgrammar.py',175),
  ('constant -> F_CONST_6','constant',1,'p_constant_float','cgrammar.py',176),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_character','cgrammar.py',182),
  ('string_literal -> STRING_LITERAL','string_literal',1,'p_string_literal','cgrammar.py',190),
  ('multi_string_literal -> string_literal','multi_string_literal',1,'p_multi_string_literal','cgrammar.py',196),
  ('multi_string_literal -> macro_param','multi_string_literal',1,'p_multi_string_literal','cgrammar.py',197),
  ('multi_string_literal -> multi_string_literal string_literal','multi_string_literal',2,'p_multi_string_literal','cgrammar.py',198),
  ('multi_string_literal -> multi_string_literal macro_param','multi_string_literal',2,'p_multi_string_literal','cgrammar.py',199),
  ('macro_param -> PP_MACRO_PARAM','macro_param',1,'p_macro_param','cgrammar.py',210),
  ('macro_param -> PP_STRINGIFY PP_MACRO_PARAM','macro_param',2,'p_macro_param','cgrammar.py',211),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression','cgrammar.py',220),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','cgrammar.py',221),
  ('primary_expression -> multi_string_literal','primary_expression',1,'p_primary_expression','cgrammar.py',222),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','cgrammar.py',223),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','cgrammar.py',232),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','cgrammar.py',233),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','cgrammar.py',234),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','cgrammar.py',235),
  ('postfix_expression -> postfix_expression PERIOD IDENTIFIER','postfix_expression',3,'p_postfix_expression','cgrammar.py',236),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','cgrammar.py',237),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','cgrammar.py',238),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','cgrammar.py',239),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','cgrammar.py',278),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','cgrammar.py',279),
  ('argument_expression_list -> type_name','argument_expression_list',1,'p_argument_expression_list','cgrammar.py',280),
  ('argument_expression_list -> argument_expression_list COMMA type_name','argument_expression_list',3,'p_argument_expression_list','cgrammar.py',281),
  ('asm_expression -> __ASM__ volatile_opt LPAREN string_literal RPAREN','asm_expression',5,'p_asm_expression','cgrammar.py',291),
  ('asm_expression -> __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list RPAREN','asm_expression',7,'p_asm_expression','cgrammar.py',292),
  ('asm_expression -> __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list RPAREN','asm_expression',9,'p_asm_expression','cgrammar.py',293),
  ('asm_expression -> __ASM__ volatile_opt LPAREN string_literal COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list COLON str_opt_expr_pair_list RPAREN','asm_expression',11,'p_asm_expression','cgrammar.py',294),
  ('str_opt_expr_pair_list -> <empty>','str_opt_expr_pair_list',0,'p_str_opt_expr_pair_list','cgrammar.py',307),
  ('str_opt_expr_pair_list -> str_opt_expr_pair','str_opt_expr_pair_list',1,'p_str_opt_expr_pair_list','cgrammar.py',308),
  ('str_opt_expr_pair_list -> str_opt_expr_pair_list COMMA str_opt_expr_pair','str_opt_expr_pair_list',3,'p_str_opt_expr_pair_list','cgrammar.py',309),
  ('str_opt_expr_pair -> string_literal','str_opt_expr_pair',1,'p_str_opt_expr_pair','cgrammar.py',314),
  ('str_opt_expr_pair -> string_literal LPAREN expression RPAREN','str_opt_expr_pair',4,'p_str_opt_expr_pair','cgrammar.py',315),
  ('volatile_opt -> <empty>','volatile_opt',0,'p_volatile_opt','cgrammar.py',320),
  ('volatile_opt -> VOLATILE','volatile_opt',1,'p_volatile_opt','cgrammar.py',321),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','cgrammar.py',338),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','cgrammar.py',339),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','cgrammar.py',340),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','cgrammar.py',341),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','cgrammar.py',342),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','cgrammar.py',343),
  ('unary_expression -> asm_expression','unary_expression',1,'p_unary_expression','cgrammar.py',344),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','cgrammar.py',361),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','cgrammar.py',362),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','cgrammar.py',363),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','cgrammar.py',364),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','cgrammar.py',365),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','cgrammar.py',366),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','cgrammar.py',372),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','cgrammar.py',373),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','cgrammar.py',389),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','cgrammar.py',390),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','cgrammar.py',391),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression','cgrammar.py',392),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','cgrammar.py',408),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','cgrammar.py',409),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','cgrammar.py',410),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','cgrammar.py',426),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','cgrammar.py',427),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','cgrammar.py',428),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','cgrammar.py',446),
  ('relational_expression -> relational_expression LT shift_expression','relational_expression',3,'p_relational_expression','cgrammar.py',447),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression','cgrammar.py',448),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','cgrammar.py',449),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','cgrammar.py',450),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','cgrammar.py',466),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','cgrammar.py',467),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','cgrammar.py',468),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','cgrammar.py',478),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','cgrammar.py',479),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','cgrammar.py',490),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','cgrammar.py',491),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','cgrammar.py',502),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','cgrammar.py',503),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','cgrammar.py',514),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','cgrammar.py',515),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','cgrammar.py',526),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','cgrammar.py',527),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','cgrammar.py',538),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','cgrammar.py',539),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','cgrammar.py',562),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','cgrammar.py',563),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','cgrammar.py',578),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',579),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',580),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',581),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',582),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',583),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',584),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',585),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',586),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',587),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','cgrammar.py',588),
  ('expression -> assignment_expression','expression',1,'p_expression','cgrammar.py',594),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','cgrammar.py',595),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','cgrammar.py',602),
  ('declaration -> declaration_impl SEMI','declaration',2,'p_declaration','cgrammar.py',608),
  ('declaration_impl -> declaration_specifier_list','declaration_impl',1,'p_declaration_impl','cgrammar.py',616),
  ('declaration_impl -> declaration_specifier_list init_declarator_list','declaration_impl',2,'p_declaration_impl','cgrammar.py',617),
  ('declaration_specifier_list -> gcc_attributes declaration_specifier gcc_attributes','declaration_specifier_list',3,'p_declaration_specifier_list','cgrammar.py',636),
  ('declaration_specifier_list -> declaration_specifier_list declaration_specifier gcc_attributes','declaration_specifier_list',3,'p_declaration_specifier_list','cgrammar.py',637),
  ('declaration_specifier -> storage_class_specifier','declaration_specifier',1,'p_declaration_specifier','cgrammar.py',650),
  ('declaration_specifier -> type_specifier','declaration_specifier',1,'p_declaration_specifier','cgrammar.py',651),
  ('declaration_specifier -> type_qualifier','declaration_specifier',1,'p_declaration_specifier','cgrammar.py',652),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','cgrammar.py',658),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','cgrammar.py',659),
  ('init_declarator -> declarator gcc_attributes','init_declarator',2,'p_init_declarator','cgrammar.py',668),
  ('init_declarator -> declarator gcc_attributes EQUALS initializer','init_declarator',4,'p_init_declarator','cgrammar.py',669),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','cgrammar.py',680),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','cgrammar.py',681),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','cgrammar.py',682),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','cgrammar.py',683),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','cgrammar.py',684),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','cgrammar.py',690),
  ('type_specifier -> _BOOL','type_specifier',1,'p_type_specifier','cgrammar.py',691),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','cgrammar.py',692),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','cgrammar.py',693),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','cgrammar.py',694),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','cgrammar.py',695),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','cgrammar.py',696),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','cgrammar.py',697),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','cgrammar.py',698),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','cgrammar.py',699),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','cgrammar.py',700),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','cgrammar.py',701),
  ('type_specifier -> TYPE_NAME','type_specifier',1,'p_type_specifier','cgrammar.py',702),
  ('type_specifier -> _NORETURN','type_specifier',1,'p_type_specifier','cgrammar.py',703),
  ('struct_or_union_specifier -> struct_or_union gcc_attributes IDENTIFIER LBRACE member_declaration_list RBRACE','struct_or_union_specifier',6,'p_struct_or_union_specifier','cgrammar.py',712),
  ('struct_or_union_specifier -> struct_or_union gcc_attributes TYPE_NAME LBRACE member_declaration_list RBRACE','struct_or_union_specifier',6,'p_struct_or_union_specifier','cgrammar.py',713),
  ('struct_or_union_specifier -> struct_or_union gcc_attributes LBRACE member_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier','cgrammar.py',714),
  ('struct_or_union_specifier -> struct_or_union gcc_attributes IDENTIFIER','struct_or_union_specifier',3,'p_struct_or_union_specifier','cgrammar.py',715),
  ('struct_or_union_specifier -> struct_or_union gcc_attributes TYPE_NAME','struct_or_union_specifier',3,'p_struct_or_union_specifier','cgrammar.py',716),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','cgrammar.py',741),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','cgrammar.py',742),
  ('gcc_attributes -> <empty>','gcc_attributes',0,'p_gcc_attributes','cgrammar.py',748),
  ('gcc_attributes -> gcc_attributes gcc_attribute','gcc_attributes',2,'p_gcc_attributes','cgrammar.py',749),
  ('gcc_attribute -> __ATTRIBUTE__ LPAREN LPAREN gcc_attrib_list RPAREN RPAREN','gcc_attribute',6,'p_gcc_attribute','cgrammar.py',760),
  ('gcc_attrib_list -> gcc_attrib','gcc_attrib_list',1,'p_gcc_attrib_list','cgrammar.py',767),
  ('gcc_attrib_list -> gcc_attrib_list COMMA gcc_attrib','gcc_attrib_list',3,'p_gcc_attrib_list','cgrammar.py',768),
  ('gcc_attrib -> <empty>','gcc_attrib',0,'p_gcc_attrib','cgrammar.py',777),
  ('gcc_attrib -> IDENTIFIER','gcc_attrib',1,'p_gcc_attrib','cgrammar.py',778),
  ('gcc_attrib -> IDENTIFIER LPAREN argument_expression_list RPAREN','gcc_attrib',4,'p_gcc_attrib','cgrammar.py',779),
  ('member_declaration_list -> member_declaration','member_declaration_list',1,'p_member_declaration_list','cgrammar.py',792),
  ('member_declaration_list -> member_declaration_list member_declaration','member_declaration_list',2,'p_member_declaration_list','cgrammar.py',793),
  ('member_declaration -> specifier_qualifier_list member_declarator_list SEMI','member_declaration',3,'p_member_declaration','cgrammar.py',802),
  ('member_declaration -> specifier_qualifier_list SEMI','member_declaration',2,'p_member_declaration','cgrammar.py',803),
  ('specifier_qualifier_list -> gcc_attributes specifier_qualifier gcc_attributes','specifier_qualifier_list',3,'p_specifier_qualifier_list','cgrammar.py',824),
  ('specifier_qualifier_list -> specifier_qualifier_list specifier_qualifier gcc_attributes','specifier_qualifier_list',3,'p_specifier_qualifier_list','cgrammar.py',825),
  ('specifier_qualifier -> type_specifier','specifier_qualifier',1,'p_specifier_qualifier','cgrammar.py',834),
  ('specifier_qualifier -> type_qualifier','specifier_qualifier',1,'p_specifier_qualifier','cgrammar.py',835),
  ('member_declarator_list -> member_declarator','member_declarator_list',1,'p_member_declarator_list','cgrammar.py',841),
  ('member_declarator_list -> member_declarator_list COMMA member_declarator','member_declarator_list',3,'p_member_declarator_list','cgrammar.py',842),
  ('member_declarator -> declarator gcc_attributes','member_declarator',2,'p_member_declarator','cgrammar.py',851),
  ('member_declarator -> COLON constant_expression gcc_attributes','member_declarator',3,'p_member_declarator','cgrammar.py',852),
  ('member_declarator -> declarator COLON constant_expression gcc_attributes','member_declarator',4,'p_member_declarator','cgrammar.py',853),
  ('enum_specifier -> ENUM LBRACE enumerator_list RBRACE','enum_specifier',4,'p_enum_specifier','cgrammar.py',868),
  ('enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier','cgrammar.py',869),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','cgrammar.py',870),
  ('enumerator_list -> enumerator_list_iso','enumerator_list',1,'p_enumerator_list','cgrammar.py',884),
  ('enumerator_list -> enumerator_list_iso COMMA','enumerator_list',2,'p_enumerator_list','cgrammar.py',885),
  ('enumerator_list_iso -> enumerator','enumerator_list_iso',1,'p_enumerator_list_iso','cgrammar.py',893),
  ('enumerator_list_iso -> enumerator_list_iso COMMA enumerator','enumerator_list_iso',3,'p_enumerator_list_iso','cgrammar.py',894),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','cgrammar.py',903),
  ('enumerator -> IDENTIFIER EQUALS constant_expression','enumerator',3,'p_enumerator','cgrammar.py',904),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','cgrammar.py',913),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','cgrammar.py',914),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','cgrammar.py',915),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','cgrammar.py',921),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','cgrammar.py',922),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','cgrammar.py',936),
  ('direct_declarator -> LPAREN gcc_attributes declarator RPAREN','direct_declarator',4,'p_direct_declarator','cgrammar.py',937),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression RBRACKET','direct_declarator',4,'p_direct_declarator','cgrammar.py',938),
  ('direct_declarator -> direct_declarator LBRACKET RBRACKET','direct_declarator',3,'p_direct_declarator','cgrammar.py',939),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','cgrammar.py',940),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','cgrammar.py',941),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','cgrammar.py',942),
  ('pointer -> TIMES','pointer',1,'p_pointer','cgrammar.py',972),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer','cgrammar.py',973),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','cgrammar.py',974),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer','cgrammar.py',975),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','cgrammar.py',997),
  ('type_qualifier_list -> gcc_attribute','type_qualifier_list',1,'p_type_qualifier_list','cgrammar.py',998),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','cgrammar.py',999),
  ('type_qualifier_list -> type_qualifier_list gcc_attribute','type_qualifier_list',2,'p_type_qualifier_list','cgrammar.py',1000),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','cgrammar.py',1009),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','cgrammar.py',1010),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','cgrammar.py',1019),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','cgrammar.py',1020),
  ('parameter_declaration -> declaration_specifier_list declarator gcc_attributes','parameter_declaration',3,'p_parameter_declaration','cgrammar.py',1029),
  ('parameter_declaration -> declaration_specifier_list abstract_declarator','parameter_declaration',2,'p_parameter_declaration','cgrammar.py',1030),
  ('parameter_declaration -> declaration_specifier_list','parameter_declaration',1,'p_parameter_declaration','cgrammar.py',1031),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','cgrammar.py',1047),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','cgrammar.py',1048),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','cgrammar.py',1061),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','cgrammar.py',1062),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','cgrammar.py',1078),
  ('abstract_declarator -> direct_abstract_declarator gcc_attributes','abstract_declarator',2,'p_abstract_declarator','cgrammar.py',1079),
  ('abstract_declarator -> pointer direct_abstract_declarator gcc_attributes','abstract_declarator',3,'p_abstract_declarator','cgrammar.py',1080),
  ('direct_abstract_declarator -> LPAREN gcc_attributes abstract_declarator RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','cgrammar.py',1107),
  ('direct_abstract_declarator -> LBRACKET RBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','cgrammar.py',1108),
  ('direct_abstract_declarator -> LBRACKET constant_expression RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','cgrammar.py',1109),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','cgrammar.py',1110),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','cgrammar.py',1111),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','cgrammar.py',1112),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','cgrammar.py',1113),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','cgrammar.py',1114),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','cgrammar.py',1115),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','cgrammar.py',1154),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','cgrammar.py',1155),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','cgrammar.py',1156),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','cgrammar.py',1161),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','cgrammar.py',1162),
  ('statement -> labeled_statement','statement',1,'p_statement','cgrammar.py',1167),
  ('statement -> compound_statement','statement',1,'p_statement','cgrammar.py',1168),
  ('statement -> expression_statement','statement',1,'p_statement','cgrammar.py',1169),
  ('statement -> selection_statement','statement',1,'p_statement','cgrammar.py',1170),
  ('statement -> iteration_statement','statement',1,'p_statement','cgrammar.py',1171),
  ('statement -> jump_statement','statement',1,'p_statement','cgrammar.py',1172),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','cgrammar.py',1177),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','cgrammar.py',1178),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','cgrammar.py',1179),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','cgrammar.py',1184),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','cgrammar.py',1185),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement','cgrammar.py',1186),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','cgrammar.py',1187),
  ('compound_statement -> LBRACE error RBRACE','compound_statement',3,'p_compound_statement_error','cgrammar.py',1192),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','cgrammar.py',1198),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','cgrammar.py',1199),
  ('statement_list -> statement','statement_list',1,'p_statement_list','cgrammar.py',1204),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','cgrammar.py',1205),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','cgrammar.py',1210),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','cgrammar.py',1211),
  ('expression_statement -> error SEMI','expression_statement',2,'p_expression_statement_error','cgrammar.py',1216),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','cgrammar.py',1222),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','cgrammar.py',1223),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','cgrammar.py',1224),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','cgrammar.py',1229),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement','cgrammar.py',1230),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','cgrammar.py',1231),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','cgrammar.py',1232),
  ('jump_statement -> GOTO IDENTIFIER SEMI','jump_statement',3,'p_jump_statement','cgrammar.py',1237),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement','cgrammar.py',1238),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','cgrammar.py',1239),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement','cgrammar.py',1240),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','cgrammar.py',1241),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','cgrammar.py',1246),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','cgrammar.py',1247),
  ('function_definition -> declaration_specifier_list declarator declaration_list compound_statement','function_definition',4,'p_function_definition','cgrammar.py',1253),
  ('function_definition -> declaration_specifier_list declarator compound_statement','function_definition',3,'p_function_definition','cgrammar.py',1254),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','cgrammar.py',1255),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','cgrammar.py',1256),
  ('directive -> define','directive',1,'p_directive','cgrammar.py',1262),
  ('directive -> undefine','directive',1,'p_directive','cgrammar.py',1263),
  ('directive -> pragma','directive',1,'p_directive','cgrammar.py',1264),
  ('define -> PP_DEFINE PP_DEFINE_NAME PP_END_DEFINE','define',3,'p_define','cgrammar.py',1269),
  ('define -> PP_DEFINE PP_DEFINE_NAME type_name PP_END_DEFINE','define',4,'p_define','cgrammar.py',1270),
  ('define -> PP_DEFINE PP_DEFINE_NAME constant_expression PP_END_DEFINE','define',4,'p_define','cgrammar.py',1271),
  ('define -> PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN RPAREN PP_END_DEFINE','define',5,'p_define','cgrammar.py',1272),
  ('define -> PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN RPAREN constant_expression PP_END_DEFINE','define',6,'p_define','cgrammar.py',1273),
  ('define -> PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN macro_parameter_list RPAREN PP_END_DEFINE','define',6,'p_define','cgrammar.py',1274),
  ('define -> PP_DEFINE PP_DEFINE_MACRO_NAME LPAREN macro_parameter_list RPAREN constant_expression PP_END_DEFINE','define',7,'p_define','cgrammar.py',1275),
  ('define -> PP_DEFINE error PP_END_DEFINE','define',3,'p_define_error','cgrammar.py',1306),
  ('undefine -> PP_UNDEFINE PP_DEFINE_NAME PP_END_DEFINE','undefine',3,'p_undefine','cgrammar.py',1334),
  ('macro_parameter_list -> PP_MACRO_PARAM','macro_parameter_list',1,'p_macro_parameter_list','cgrammar.py',1345),
  ('macro_parameter_list -> macro_parameter_list COMMA PP_MACRO_PARAM','macro_parameter_list',3,'p_macro_parameter_list','cgrammar.py',1346),
  ('pragma -> pragma_pack','pragma',1,'p_pragma','cgrammar.py',1370),
  ('pragma_pack -> PRAGMA PRAGMA_PACK LPAREN RPAREN PRAGMA_END','pragma_pack',5,'p_pragma_pack','cgrammar.py',1375),
  ('pragma_pack -> PRAGMA PRAGMA_PACK LPAREN constant RPAREN PRAGMA_END','pragma_pack',6,'p_pragma_pack','cgrammar.py',1376),
  ('pragma_pack -> PRAGMA PRAGMA_PACK LPAREN pragma_pack_stack_args RPAREN PRAGMA_END','pragma_pack',6,'p_pragma_pack','cgrammar.py',1377),
  ('pragma_pack_stack_args -> IDENTIFIER','pragma_pack_stack_args',1,'p_pragma_pack_stack_args','cgrammar.py',1401),
  ('pragma_pack_stack_args -> IDENTIFIER COMMA IDENTIFIER','pragma_pack_stack_args',3,'p_pragma_pack_stack_args','cgrammar.py',1402),
  ('pragma_pack_stack_args -> IDENTIFIER COMMA IDENTIFIER COMMA constant','pragma_pack_stack_args',5,'p_pragma_pack_stack_args','cgrammar.py',1403),
  ('pragma_pack_stack_args -> IDENTIFIER COMMA constant COMMA IDENTIFIER','pragma_pack_stack_args',5,'p_pragma_pack_stack_args','cgrammar.py',1404),
  ('pragma_pack_stack_args -> IDENTIFIER COMMA constant','pragma_pack_stack_args',3,'p_pragma_pack_stack_args','cgrammar.py',1405),
]
